services:
  app:
    depends_on:
      postgres:
        condition: service_healthy
      redis: 
        condition: service_started
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./docuseal:/data/docuseal

    environment:
      - HOST=${HOST}
      - FORCE_SSL=${HOST}
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docuseal
      - RAILS_ENV=development

  redis:
    image: redis:latest
    ports: 
      - 6379:6379
    
  postgres:
    image: postgres:15
    volumes:
      - './pg_data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: docuseal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports: 
      - 5432:5432


        # caddy:
        #   image: caddy:latest
        #   command: caddy reverse-proxy --from $HOST --to app:3000
        #   ports:
        #     - 81:80
        #     - 444:443
        #     - 444:443/udp
        #   volumes:
        #     - .:/data
        #   environment:
        #     - HOST=${HOST}
 